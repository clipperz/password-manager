stages:
  - build
  - edit

services:
  - docker:dind

variables:
  FILENAME: docker-compose.yml
  VERSION_REGEX: ${CI_PROJECT_NAME}:[0-9a-f]{40}
  VERSION_SUBSTITUTE: ${CI_PROJECT_NAME}:${CI_COMMIT_SHA}
  FULL_IMAGE_TAG: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}

.git-config: &git-config
  - apk update && apk add git
  - apk add curl
  - git config --global user.email "dpicchiotti@imolainformatica.it"
  - git config --global user.name "Clipperz build bot"

.docker-login: &docker-login
  - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY

.build: &build
  - docker build --build-arg BUILD_ENV=${ENV} -t ${FULL_IMAGE_TAG} .
  - docker push ${FULL_IMAGE_TAG}

.edit-compose: &edit-compose
  - git clone https://oauth2:${COMPOSE_TOKEN}@gitlab.imolab.it/clipperz/clipperz-docker.git
  - cd clipperz-docker
  - git checkout ${TARGET_ENVIROMENT}
  - sed -E -i "s/${VERSION_REGEX}/${VERSION_SUBSTITUTE}/g" ${FILENAME}
  - git add ./${FILENAME}
  - git commit -m "Modified docker-compose.yml to use new image of '$CI_PROJECT_NAME' (triggered by commit '$CI_COMMIT_SHA')"
  - git push

.edit-helm-values: &edit-helm-values
  - git clone https://oauth2:${COMPOSE_TOKEN}@gitlab.imolab.it/clipperz/charts/password-manager.git
  - cd password-manager
  - git checkout main
  - sed -E -i "s/${TAG_REGEX}/${TAG_SUBSTITUTE}/g" values-${TARGET_ENVIROMENT}.yaml
  - git add ./values-${TARGET_ENVIROMENT}.yaml
  - git commit -m "Modified values-${TARGET_ENVIROMENT}.yaml to use new image of '$CI_REGISTRY_IMAGE' (triggered by commit '$CI_COMMIT_SHA')"
  - git push

build-image-prod:
  stage: build
  tags: 
    - clipperz-build
  variables:
    ENV: PRODUCTION
  before_script:
    - *docker-login
  script:
    - *build
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

build-image-dev:
  stage: build
  tags: 
    - clipperz-build
  variables:
    ENV: STAGING
  before_script:
    - *docker-login
  script:
    - *build
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"

edit-prod:
  stage: edit
  tags:
    - clipperz-build
  variables:
    TARGET_ENVIROMENT: production
  before_script:
    - *git-config
  script:
    - *edit-compose
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

edit-dev:
  stage: edit
  tags:
    - clipperz-build
  variables:
    TARGET_ENVIROMENT: staging
    TAG_REGEX: "tag: [0-9a-f]{40}"
    TAG_SUBSTITUTE: "tag: ${CI_COMMIT_SHA}"
  before_script:
    - *git-config
  script:
    - *edit-compose
    - *edit-helm-values
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"